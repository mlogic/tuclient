#!/usr/bin/env python
"""Unit tests for collectd_os plugin"""
# Copyright (c) 2017-2019 Yan Li, TuneUp.ai <yanli@tuneup.ai>.
# All rights reserved.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License version 2.1 as published by the Free Software Foundation.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, see
# https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
from __future__ import absolute_import, division, print_function, unicode_literals

__author__ = 'Yan Li'
__copyright__ = 'Copyright (c) 2017-2019 Yan Li, TuneUp.ai <yanli@tuneup.ai>. All rights reserved.'
__license__ = 'LGPLv2.1'
__docformat__ = 'reStructuredText'

import tuclient
from tuclient_extensions.collectd_os import *
import unittest


class MockCollectd:
    def add_plugin(self, plugin):
        del plugin
        pass

    def register_callback(self, plugin, callback):
        del plugin, callback
        pass

    def start(self):
        pass

    def stop(self):
        pass


class TestCollectdOS(unittest.TestCase):
    def setUp(self):
        self._logger = tuclient.get_stdout_logger()
        self._logger.setLevel(logging.WARNING)

    def test_start_stop(self):
        collectd_os = None
        try:
            collectd_os = CollectdOS(self._logger)
            collectd_os.start()
            num_pis = len(collectd_os.pi_names)
            self.assertGreater(num_pis, 1)
            self.assertEqual(num_pis, len(collectd_os.collect()))
        finally:
            collectd_os.stop()

    def test_parsing_data(self):
        mock_data = [
            [(0, 'freesia'), (8, 1548967454.3995583), (9, 1073741824), (2, 'cpu'), (3, '1'), (4, 'cpu'), (5, 'user'),
             (6, [(2, 39643)]), (8, 1548967454.3995528), (3, '0'), (6, [(2, 38037)]), (8, 1548967454.3995895), (3, '6'),
             (6, [(2, 35494)]), (8, 1548967454.3995888), (3, '5'), (6, [(2, 40006)]), (8, 1548967454.39958), (3, '3'),
             (6, [(2, 41120)]), (8, 1548967454.399585), (3, '4'), (6, [(2, 40758)]), (8, 1548967454.3996015), (3, '1'),
             (5, 'system'), (6, [(2, 11162)]), (8, 1548967454.3995912), (3, '0'), (6, [(2, 10770)]),
             (8, 1548967454.399603), (3, '2'), (6, [(2, 11425)]), (8, 1548967454.3995905), (3, '7'), (5, 'user'),
             (6, [(2, 38053)]), (8, 1548967454.3996043), (3, '4'), (5, 'system'), (6, [(2, 10315)]),
             (8, 1548967454.3995624), (3, '2'), (5, 'user'), (6, [(2, 40741)]), (8, 1548967454.3996894), (3, '7'),
             (5, 'system'), (6, [(2, 12273)]), (8, 1548967454.3996906), (3, '0'), (5, 'wait'), (6, [(2, 3888)]),
             (8, 1548967454.399686), (3, '6'), (5, 'system'), (6, [(2, 17992)]), (8, 1548967454.399605), (3, '5'),
             (6, [(2, 9723)]), (8, 1548967454.399692), (3, '2'), (5, 'wait'), (6, [(2, 4704)]), (8, 1548967454.3996036),
             (3, '3'), (5, 'system'), (6, [(2, 10722)]), (8, 1548967454.3996959), (3, '4'), (5, 'wait'),
             (6, [(2, 2220)]), (8, 1548967454.3996983), (3, '7'), (6, [(2, 5151)]), (8, 1548967454.3996992), (3, '0'),
             (5, 'nice'), (6, [(2, 65)]), (8, 1548967454.399702), (3, '1'), (6, [(2, 89)]), (8, 1548967454.3997028),
             (3, '2'), (6, [(2, 86)]), (0, 'freesia'), (8, 1548967454.3996968), (9, 1073741824), (2, 'cpu'), (3, '5'),
             (4, 'cpu'), (5, 'wait'), (6, [(2, 2807)]), (8, 1548967454.3996952), (3, '3'), (6, [(2, 3446)]),
             (8, 1548967454.3997045), (3, '4'), (5, 'nice'), (6, [(2, 78)]), (8, 1548967454.3996975), (3, '6'),
             (5, 'wait'), (6, [(2, 2147)]), (8, 1548967454.3997052), (3, '5'), (5, 'nice'), (6, [(2, 194)]),
             (8, 1548967454.3996913), (3, '1'), (5, 'wait'), (6, [(2, 6084)]), (8, 1548967454.39971), (3, '0'),
             (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967454.3997037), (3, '3'), (5, 'nice'), (6, [(2, 171)]),
             (8, 1548967454.3997087), (3, '7'), (6, [(2, 86)]), (8, 1548967454.3997147), (3, '3'), (5, 'interrupt'),
             (6, [(2, 0)]), (8, 1548967454.3997114), (3, '2'), (6, [(2, 0)]), (8, 1548967454.399708), (3, '6'),
             (5, 'nice'), (6, [(2, 162)]), (8, 1548967454.3997176), (3, '7'), (5, 'interrupt'), (6, [(2, 0)]),
             (8, 1548967454.3997183), (3, '0'), (5, 'softirq'), (6, [(2, 11820)]), (8, 1548967454.3997107), (3, '1'),
             (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967454.3997154), (3, '4'), (6, [(2, 0)]), (8, 1548967454.3997211),
             (3, '1'), (5, 'softirq'), (6, [(2, 4907)]), (8, 1548967454.3997161), (3, '5'), (5, 'interrupt'),
             (6, [(2, 0)]), (8, 1548967454.3997228), (3, '3'), (5, 'softirq'), (6, [(2, 1026)]),
             (8, 1548967454.3997219), (3, '2'), (6, [(2, 1694)]), (8, 1548967454.3997169), (3, '6'), (5, 'interrupt'),
             (6, [(2, 0)])],
            [(0, 'freesia'), (8, 1548967454.3997235), (9, 1073741824), (2, 'cpu'), (3, '4'), (4, 'cpu'), (5, 'softirq'),
             (6, [(2, 247)]), (8, 1548967454.3997283), (3, '7'), (6, [(2, 1352)]), (8, 1548967454.3997242), (3, '5'),
             (6, [(2, 128)]), (8, 1548967454.39973), (3, '1'), (5, 'steal'), (6, [(2, 0)]), (8, 1548967454.3997338),
             (3, '3'), (6, [(2, 0)]), (8, 1548967454.3997345), (3, '4'), (6, [(2, 0)]), (8, 1548967454.3997273),
             (3, '6'), (5, 'softirq'), (6, [(2, 97)]), (8, 1548967454.3997355), (3, '5'), (5, 'steal'), (6, [(2, 0)]),
             (8, 1548967454.3997362), (3, '6'), (6, [(2, 0)]), (8, 1548967454.399731), (3, '2'), (6, [(2, 0)]),
             (8, 1548967454.399737), (3, '7'), (6, [(2, 0)]), (8, 1548967454.399743), (3, '3'), (5, 'idle'),
             (6, [(2, 1410102)]), (8, 1548967454.3997438), (3, '4'), (6, [(2, 1413075)]), (8, 1548967454.3997445),
             (3, '5'), (6, [(2, 1413862)]), (8, 1548967454.3997421), (3, '2'), (6, [(2, 1409288)]),
             (8, 1548967454.399729), (3, '0'), (5, 'steal'), (6, [(2, 0)]), (8, 1548967454.3997414), (3, '1'),
             (5, 'idle'), (6, [(2, 1406597)]), (8, 1548967454.399738), (3, '0'), (6, [(2, 1413065)]),
             (8, 1548967454.3997476), (3, '6'), (6, [(2, 1392777)]), (8, 1548967454.3997483), (3, '7'),
             (6, [(2, 1408088)]), (8, 1548967455.3998203), (3, '0'), (5, 'user'), (6, [(2, 38051)]),
             (8, 1548967455.3998685), (3, '5'), (6, [(2, 40008)]), (8, 1548967455.3998504), (3, '3'), (6, [(2, 41128)]),
             (8, 1548967455.3998604), (3, '4'), (6, [(2, 40760)]), (0, 'freesia'), (8, 1548967455.3998704),
             (9, 1073741824), (2, 'cpu'), (3, '6'), (4, 'cpu'), (5, 'user'), (6, [(2, 35495)]), (8, 1548967455.399833),
             (3, '1'), (6, [(2, 39649)]), (8, 1548967455.3998778), (3, '2'), (5, 'system'), (6, [(2, 11425)]),
             (8, 1548967455.399879), (3, '3'), (6, [(2, 10725)]), (8, 1548967455.39984), (3, '2'), (5, 'user'),
             (6, [(2, 40742)]), (8, 1548967455.3998816), (3, '5'), (5, 'system'), (6, [(2, 9724)]),
             (8, 1548967455.3998833), (3, '6'), (6, [(2, 17994)]), (8, 1548967455.3998845), (3, '7'), (6, [(2, 12274)]),
             (8, 1548967455.3998861), (3, '0'), (5, 'wait'), (6, [(2, 3888)]), (8, 1548967455.3998876), (3, '1'),
             (6, [(2, 6084)]), (8, 1548967455.399875), (3, '0'), (5, 'system'), (6, [(2, 10771)]),
             (8, 1548967455.399872), (3, '7'), (5, 'user'), (6, [(2, 38055)]), (8, 1548967455.3998902), (3, '3'),
             (5, 'wait'), (6, [(2, 3446)]), (8, 1548967455.3998964), (3, '4'), (6, [(2, 2220)]), (8, 1548967455.399898),
             (3, '5'), (6, [(2, 2807)]), (8, 1548967455.3999012), (3, '7'), (6, [(2, 5151)]), (8, 1548967455.3998995),
             (3, '6'), (6, [(2, 2147)]), (8, 1548967455.3999028), (3, '0'), (5, 'nice'), (6, [(2, 65)]),
             (8, 1548967455.3998764), (3, '1'), (5, 'system'), (6, [(2, 11165)]), (8, 1548967455.3998802), (3, '4'),
             (6, [(2, 10315)]), (8, 1548967455.3999076), (3, '3'), (5, 'nice'), (6, [(2, 171)]), (8, 1548967455.399909),
             (3, '4'), (6, [(2, 78)]), (8, 1548967455.3998888), (3, '2'), (5, 'wait'), (6, [(2, 4704)]), (0, 'freesia'),
             (8, 1548967455.3999329), (9, 1073741824), (2, 'cpu'), (3, '7'), (4, 'cpu'), (5, 'nice'), (6, [(2, 86)]),
             (8, 1548967455.3999352), (3, '0'), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967455.3999372), (3, '1'),
             (6, [(2, 0)]), (8, 1548967455.3999062), (3, '2'), (5, 'nice'), (6, [(2, 86)]), (8, 1548967455.399946),
             (3, '3'), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967455.3999515), (3, '4'), (6, [(2, 0)]),
             (8, 1548967455.3999586), (3, '5'), (6, [(2, 0)]), (8, 1548967455.39996), (3, '6'), (6, [(2, 0)]),
             (8, 1548967455.3999612), (3, '7'), (6, [(2, 0)]), (8, 1548967455.3999627), (3, '0'), (5, 'softirq'),
             (6, [(2, 11824)]), (8, 1548967455.3999643), (3, '1'), (6, [(2, 4907)]), (8, 1548967455.3999104), (3, '5'),
             (5, 'nice'), (6, [(2, 194)]), (8, 1548967455.3999307), (3, '6'), (6, [(2, 162)]), (8, 1548967455.3999722),
             (3, '3'), (5, 'softirq'), (6, [(2, 1026)]), (8, 1548967455.399977), (3, '4'), (6, [(2, 247)]),
             (8, 1548967455.399981), (3, '6'), (6, [(2, 97)]), (8, 1548967455.3999798), (3, '5'), (6, [(2, 128)]),
             (8, 1548967455.3999827), (3, '7'), (6, [(2, 1352)]), (8, 1548967455.3999841), (3, '0'), (5, 'steal'),
             (6, [(2, 0)]), (8, 1548967455.3999856), (3, '1'), (6, [(2, 0)]), (8, 1548967455.3999918), (3, '2'),
             (6, [(2, 0)]), (8, 1548967455.3999934), (3, '3'), (6, [(2, 0)]), (8, 1548967455.3999946), (3, '4'),
             (6, [(2, 0)])],
            [(0, 'freesia'), (8, 1548967455.399904), (9, 1073741824), (2, 'cpu'), (3, '1'), (4, 'cpu'), (5, 'nice'),
             (6, [(2, 89)]), (8, 1548967455.399944), (3, '2'), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967455.400005),
             (3, '0'), (5, 'idle'), (6, [(2, 1413149)]), (8, 1548967455.3999655), (3, '2'), (5, 'softirq'),
             (6, [(2, 1694)]), (8, 1548967455.4000065), (3, '1'), (5, 'idle'), (6, [(2, 1406689)]),
             (8, 1548967455.3999963), (3, '5'), (5, 'steal'), (6, [(2, 0)]), (8, 1548967455.3999977), (3, '6'),
             (6, [(2, 0)]), (8, 1548967455.4000032), (3, '7'), (6, [(2, 0)]), (8, 1548967455.40001), (3, '4'),
             (5, 'idle'), (6, [(2, 1413172)]), (8, 1548967455.400016), (3, '5'), (6, [(2, 1413959)]),
             (8, 1548967455.400009), (3, '3'), (6, [(2, 1410190)]), (8, 1548967455.4000077), (3, '2'),
             (6, [(2, 1409386)]), (8, 1548967455.4000185), (3, '7'), (6, [(2, 1408185)]), (8, 1548967455.4000173),
             (3, '6'), (6, [(2, 1392871)]), (8, 1548967456.4000363), (3, '0'), (5, 'user'), (6, [(2, 38056)]),
             (8, 1548967456.4000707), (3, '5'), (6, [(2, 40014)]), (8, 1548967456.400054), (3, '2'), (6, [(2, 40751)]),
             (8, 1548967456.4000483), (3, '1'), (6, [(2, 39651)]), (8, 1548967456.4000592), (3, '3'), (6, [(2, 41135)]),
             (8, 1548967456.400065), (3, '4'), (6, [(2, 40762)]), (8, 1548967456.4000733), (3, '7'), (6, [(2, 38060)]),
             (8, 1548967456.4000766), (3, '0'), (5, 'system'), (6, [(2, 10772)]), (8, 1548967456.400072), (3, '6'),
             (5, 'user'), (6, [(2, 35496)]), (0, 'freesia'), (8, 1548967456.400079), (9, 1073741824), (2, 'cpu'),
             (3, '2'), (4, 'cpu'), (5, 'system'), (6, [(2, 11425)]), (8, 1548967456.4000835), (3, '6'),
             (6, [(2, 17996)]), (8, 1548967456.4000847), (3, '7'), (6, [(2, 12278)]), (8, 1548967456.4000878), (3, '0'),
             (5, 'wait'), (6, [(2, 3888)]), (8, 1548967456.400089), (3, '1'), (6, [(2, 6084)]), (8, 1548967456.4000902),
             (3, '2'), (6, [(2, 4704)]), (8, 1548967456.4000914), (3, '3'), (6, [(2, 3446)]), (8, 1548967456.4000926),
             (3, '4'), (6, [(2, 2220)]), (8, 1548967456.4000936), (3, '5'), (6, [(2, 2807)]), (8, 1548967456.4000947),
             (3, '6'), (6, [(2, 2147)]), (8, 1548967456.400096), (3, '7'), (6, [(2, 5151)]), (8, 1548967456.4000983),
             (3, '0'), (5, 'nice'), (6, [(2, 65)]), (8, 1548967456.4000995), (3, '1'), (6, [(2, 89)]),
             (8, 1548967456.4001007), (3, '2'), (6, [(2, 86)]), (8, 1548967456.400102), (3, '3'), (6, [(2, 171)]),
             (8, 1548967456.4001029), (3, '4'), (6, [(2, 78)]), (8, 1548967456.400104), (3, '5'), (6, [(2, 194)]),
             (8, 1548967456.4000778), (3, '1'), (5, 'system'), (6, [(2, 11167)]), (8, 1548967456.4000823), (3, '5'),
             (6, [(2, 9726)]), (8, 1548967456.4000814), (3, '4'), (6, [(2, 10316)]), (8, 1548967456.400116), (3, '0'),
             (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967456.4001172), (3, '1'), (6, [(2, 0)]), (8, 1548967456.4001222),
             (3, '2'), (6, [(2, 0)]), (8, 1548967456.4001281), (3, '4'), (6, [(2, 0)]), (0, 'freesia'),
             (8, 1548967456.4000802), (9, 1073741824), (2, 'cpu'), (3, '3'), (4, 'cpu'), (5, 'system'),
             (6, [(2, 10727)]), (8, 1548967456.4001076), (3, '6'), (5, 'nice'), (6, [(2, 162)]),
             (8, 1548967456.4001315), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967456.4001327), (3, '7'), (6, [(2, 0)]),
             (8, 1548967456.4001389), (3, '0'), (5, 'softirq'), (6, [(2, 11827)]), (8, 1548967456.400141), (3, '1'),
             (6, [(2, 4907)]), (8, 1548967456.4001427), (3, '2'), (6, [(2, 1694)]), (8, 1548967456.4001489), (3, '4'),
             (6, [(2, 247)]), (8, 1548967456.400109), (3, '7'), (5, 'nice'), (6, [(2, 86)]), (8, 1548967456.4001508),
             (3, '5'), (5, 'softirq'), (6, [(2, 128)]), (8, 1548967456.400152), (3, '6'), (6, [(2, 97)]),
             (8, 1548967456.4001298), (3, '5'), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967456.4001532), (3, '7'),
             (5, 'softirq'), (6, [(2, 1352)]), (8, 1548967456.4001465), (3, '3'), (6, [(2, 1026)]),
             (8, 1548967456.400125), (5, 'interrupt'), (6, [(2, 0)]), (8, 1548967456.400156), (3, '0'), (5, 'steal'),
             (6, [(2, 0)]), (8, 1548967456.4001617), (3, '4'), (6, [(2, 0)]), (8, 1548967456.4001575), (3, '1'),
             (6, [(2, 0)]), (8, 1548967456.400163), (3, '5'), (6, [(2, 0)]), (8, 1548967456.4001603), (3, '3'),
             (6, [(2, 0)]), (8, 1548967456.4001644), (3, '6'), (6, [(2, 0)]), (8, 1548967456.4001694), (3, '1'),
             (5, 'idle'), (6, [(2, 1406786)])]
            ]
        collectd_os = None
        try:
            collectd_os = CollectdOS(self._logger, collectd_instance=MockCollectd())
            self._records_received = 0
            collectd_os.start()
            for md in mock_data:
                collectd_os._on_receiving_cpu_data('host_a', 'cpu', md)
            self.assertEqual(64, len(collectd_os.pi_names))
            expected_pi_names = ['host_a/cpu/0/idle', 'host_a/cpu/0/interrupt', 'host_a/cpu/0/nice',
                                 'host_a/cpu/0/softirq', 'host_a/cpu/0/steal', 'host_a/cpu/0/system',
                                 'host_a/cpu/0/user', 'host_a/cpu/0/wait', 'host_a/cpu/1/idle',
                                 'host_a/cpu/1/interrupt', 'host_a/cpu/1/nice', 'host_a/cpu/1/softirq',
                                 'host_a/cpu/1/steal', 'host_a/cpu/1/system', 'host_a/cpu/1/user', 'host_a/cpu/1/wait',
                                 'host_a/cpu/2/idle', 'host_a/cpu/2/interrupt', 'host_a/cpu/2/nice',
                                 'host_a/cpu/2/softirq', 'host_a/cpu/2/steal', 'host_a/cpu/2/system',
                                 'host_a/cpu/2/user', 'host_a/cpu/2/wait', 'host_a/cpu/3/idle',
                                 'host_a/cpu/3/interrupt', 'host_a/cpu/3/nice', 'host_a/cpu/3/softirq',
                                 'host_a/cpu/3/steal', 'host_a/cpu/3/system', 'host_a/cpu/3/user', 'host_a/cpu/3/wait',
                                 'host_a/cpu/4/idle', 'host_a/cpu/4/interrupt', 'host_a/cpu/4/nice',
                                 'host_a/cpu/4/softirq', 'host_a/cpu/4/steal', 'host_a/cpu/4/system',
                                 'host_a/cpu/4/user', 'host_a/cpu/4/wait', 'host_a/cpu/5/idle',
                                 'host_a/cpu/5/interrupt', 'host_a/cpu/5/nice', 'host_a/cpu/5/softirq',
                                 'host_a/cpu/5/steal', 'host_a/cpu/5/system', 'host_a/cpu/5/user', 'host_a/cpu/5/wait',
                                 'host_a/cpu/6/idle', 'host_a/cpu/6/interrupt', 'host_a/cpu/6/nice',
                                 'host_a/cpu/6/softirq', 'host_a/cpu/6/steal', 'host_a/cpu/6/system',
                                 'host_a/cpu/6/user', 'host_a/cpu/6/wait', 'host_a/cpu/7/idle',
                                 'host_a/cpu/7/interrupt', 'host_a/cpu/7/nice', 'host_a/cpu/7/softirq',
                                 'host_a/cpu/7/steal', 'host_a/cpu/7/system', 'host_a/cpu/7/user', 'host_a/cpu/7/wait']
            self.assertEqual(expected_pi_names, collectd_os.pi_names)
            expected_collect_result = [84, 0, 0, 4, 0, 1, 14, 0, 92, 0, 0, 0, 0, 3, 6, 0, 98, 0, 0, 0, 0, 0, 1, 0, 88,
                                       0, 0, 0, 0, 3, 8, 0, 97, 0, 0, 0, 0, 0, 2, 0, 97, 0, 0, 0, 0, 1, 2, 0, 94, 0, 0,
                                       0, 0, 2, 1, 0, 97, 0, 0, 0, 0, 1, 2, 0]
            self.assertEqual(expected_collect_result, collectd_os.collect())
        finally:
            collectd_os.stop()


if __name__ == '__main__':
    unittest.main()
